/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package videoconferencia;

import com.github.sarxos.webcam.Webcam;
import controlador.ControllerAnfitrion;
import java.awt.Color;
import java.beans.Visibility;
import java.io.DataInputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;

/**
 *
 * @author Usuario
 */
public class interfazAnfitrion extends javax.swing.JFrame{

    /**
     * Creates new form interfazAnfitrion
     */
    public interfazAnfitrion() {
        initComponents();
        this.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        setLocationRelativeTo(null);
        /*
        Thread hilo = new Thread(this);
        hilo.start();
        */
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        monitorCliente = new javax.swing.JLabel();
        conectados = new javax.swing.JLabel();
        estadoServer = new javax.swing.JLabel();
        textServidor = new javax.swing.JTextField();
        botonComenzar = new javax.swing.JButton();
        botonDetener = new javax.swing.JButton();
        conectorClientes = new javax.swing.JTextField();
        ventanaServer = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAreaMonitorCliente = new javax.swing.JTextArea();
        btnCamara = new javax.swing.JButton();
        lbCamara = new javax.swing.JLabel();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        monitorCliente.setFont(new java.awt.Font("Times New Roman", 3, 12)); // NOI18N
        monitorCliente.setText("Monitor Cliente");

        conectados.setFont(new java.awt.Font("Times New Roman", 3, 12)); // NOI18N
        conectados.setText("Clientes Conectados");

        estadoServer.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        estadoServer.setText("Estado del Servidor:");

        textServidor.setBackground(new java.awt.Color(204, 204, 255));

        botonComenzar.setBackground(new java.awt.Color(153, 255, 153));
        botonComenzar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        botonComenzar.setText("Comenzar");
        botonComenzar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonComenzarActionPerformed(evt);
            }
        });

        botonDetener.setBackground(new java.awt.Color(153, 255, 153));
        botonDetener.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        botonDetener.setText("Detener");
        botonDetener.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonDetenerActionPerformed(evt);
            }
        });

        conectorClientes.setBackground(new java.awt.Color(255, 255, 204));

        ventanaServer.setFont(new java.awt.Font("Gill Sans MT Condensed", 1, 18)); // NOI18N
        ventanaServer.setForeground(new java.awt.Color(0, 153, 51));
        ventanaServer.setText("SALA PRINCIPAL");

        txtAreaMonitorCliente.setColumns(20);
        txtAreaMonitorCliente.setRows(5);
        jScrollPane2.setViewportView(txtAreaMonitorCliente);

        btnCamara.setText("CAMARA");
        btnCamara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCamaraActionPerformed(evt);
            }
        });

        lbCamara.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(textServidor, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(estadoServer, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(ventanaServer)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(91, 91, 91)
                                .addComponent(monitorCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(121, 121, 121)
                                .addComponent(conectados)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 175, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(conectorClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(lbCamara, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(botonComenzar)
                        .addGap(73, 73, 73)
                        .addComponent(botonDetener)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCamara)
                        .addGap(50, 50, 50)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ventanaServer)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(monitorCliente)
                    .addComponent(conectados))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(conectorClientes, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                            .addComponent(jScrollPane2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(lbCamara, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(estadoServer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textServidor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonComenzar)
                    .addComponent(botonDetener)
                    .addComponent(btnCamara))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonComenzarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonComenzarActionPerformed

        textServidor.setBackground(Color.GREEN);
        textServidor.setText("En Linea");
    }//GEN-LAST:event_botonComenzarActionPerformed

    private void botonDetenerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonDetenerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botonDetenerActionPerformed

    private void btnCamaraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCamaraActionPerformed
  
        
    }//GEN-LAST:event_btnCamaraActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
        java.awt.EventQueue.invokeLater(new Runnable() {
            
            public void run() {
                new interfazAnfitrion().setVisible(true);
                
            }
            
        });*/
        interfazAnfitrion v = new interfazAnfitrion();
        ControllerAnfitrion c = new ControllerAnfitrion(v);
        v.setVisible(true);
        v.setLocationRelativeTo(null);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton botonComenzar;
    public javax.swing.JButton botonDetener;
    public javax.swing.JButton btnCamara;
    private javax.swing.JLabel conectados;
    private javax.swing.JTextField conectorClientes;
    private javax.swing.JLabel estadoServer;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    public javax.swing.JLabel lbCamara;
    private javax.swing.JLabel monitorCliente;
    public javax.swing.JTextField textServidor;
    public javax.swing.JTextArea txtAreaMonitorCliente;
    private javax.swing.JLabel ventanaServer;
    // End of variables declaration//GEN-END:variables

    
    /*
    @Override
    public void run() {
        
        try {
            ServerSocket servidor = new ServerSocket(9999);
            while(true){
                Socket miSocket = servidor.accept();
            
                DataInputStream flujo_entrada = new DataInputStream(miSocket.getInputStream());

                String mensaje_texto = flujo_entrada.readUTF();

                txtAreaMonitorCliente.append("\n Se ha conectado: "+mensaje_texto);

                miSocket.close();
                
            }

        } catch (IOException ex) {
            Logger.getLogger(IniciarServidor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
*/
}
