/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package videoconferencia;

import java.io.DataOutputStream;
import java.io.IOException;
import java.net.InetAddress;
import java.net.Socket;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Usuario
 */
public class interfazCliente extends javax.swing.JFrame {

    /**
     * Creates new form interfazCliente
     */
    public interfazCliente() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botonIniSesion = new javax.swing.JButton();
        nombreUsuario = new javax.swing.JLabel();
        registroUsuario = new javax.swing.JTextField();
        tituloConferencia = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        botonIniSesion.setBackground(new java.awt.Color(255, 153, 102));
        botonIniSesion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        botonIniSesion.setText("Iniciar Sesi√≥n");
        botonIniSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonIniSesionActionPerformed(evt);
            }
        });

        nombreUsuario.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        nombreUsuario.setText("Nombre Usuario:");

        registroUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registroUsuarioActionPerformed(evt);
            }
        });

        tituloConferencia.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        tituloConferencia.setForeground(new java.awt.Color(51, 51, 255));
        tituloConferencia.setText("Registro a la Video Conferencia");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(tituloConferencia, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(26, 26, 26)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(nombreUsuario)
                                .addComponent(registroUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(botonIniSesion)))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(tituloConferencia)
                .addGap(55, 55, 55)
                .addComponent(nombreUsuario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(registroUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69)
                .addComponent(botonIniSesion)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonIniSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonIniSesionActionPerformed

        // TODO add your handling code here:
        String nombreUsuario = registroUsuario.getText();

        Conexion cc = new Conexion();
        Connection cn = null;
        try {
            cn = cc.getConexion();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(interfazAnfitrion.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            if (existe(nombreUsuario)) {
                JOptionPane.showMessageDialog(null, "EL USUARIO YA EXISTE!!!");
            } else {

                PreparedStatement pst = cn.prepareStatement("INSERT INTO USUARIO(NOMBRE_USUARIO) VALUES(?)");
                pst.setString(1, nombreUsuario);
                int a = pst.executeUpdate();
                if (a > 0) {
                    JOptionPane.showMessageDialog(null, "Registro exitoso");
                    limpiar();
                } else {
                    JOptionPane.showMessageDialog(null, "Error al agregar");
                }
            }
        } catch (Exception e) {
        }
               
        //conexion con el servidor
        
        Socket miSocket;
        try {
            String ip = InetAddress.getLocalHost().getHostAddress();   
            //Socket miSocket = new Socket("192.168.100.2",9999); // isra
            //miSocket = new Socket("192.168.0.106", 9999); // da
            miSocket = new Socket(ip, 9999); //general

            DataOutputStream flujo_salida = new DataOutputStream(miSocket.getOutputStream());
            flujo_salida.writeUTF(registroUsuario.getText());
            flujo_salida.close();

        } catch (IOException ex) {
            Logger.getLogger(interfazCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_botonIniSesionActionPerformed

    private void registroUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registroUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_registroUsuarioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(interfazCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(interfazCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(interfazCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(interfazCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new interfazCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonIniSesion;
    private javax.swing.JLabel nombreUsuario;
    private javax.swing.JTextField registroUsuario;
    private javax.swing.JLabel tituloConferencia;
    // End of variables declaration//GEN-END:variables

    private boolean existe(String nombreUsuario) throws SQLException, ClassNotFoundException {
        PreparedStatement ps = null;
        Conexion cc = new Conexion();
        Connection cn = null;
        cn = cc.getConexion();
        //Connection con = getConexion();
        ResultSet rs;
        String sql = "SELECT NOMBRE_USUARIO FROM USUARIO WHERE NOMBRE_USUARIO = ?";

        ps = cn.prepareStatement(sql);
        ps.setString(1, nombreUsuario);
        rs = ps.executeQuery();

        if (rs.next()) {
            return true;

        } else {
            return false;
        }

    }

    private void limpiar() {
        registroUsuario.setText("");

    }

}
